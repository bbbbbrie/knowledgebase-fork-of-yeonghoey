#+TITLE: CSS

* Table of Contents :TOC_3_gh:
- [[#selectors][Selectors]]
  - [[#before][::before]]
  - [[#attribute-selectors][Attribute selectors]]
- [[#properties][Properties]]
  - [[#align-items][align-items]]
  - [[#box-sizing][box-sizing]]
  - [[#margin][margin]]
- [[#topics][Topics]]
  - [[#cascade-order][Cascade Order]]
  - [[#viewport][Viewport]]
  - [[#units][Units]]
    - [[#px-][px, %]]
    - [[#em-ex-ch][em, ex, ch]]
    - [[#rem][rem]]
    - [[#vw-vh-vmin-vmax][vw, vh, vmin, vmax]]
    - [[#cm-mm-in-pt-pc][cm, mm, in, pt, pc]]
  - [[#media-queries][Media Queries]]
- [[#layouts][Layouts]]
  - [[#flexbox][flexbox]]

* Selectors
** [[https://www.w3schools.com/cssref/sel_before.asp][::before]]
Insert some text before the content of each ~<p>~ element:

#+BEGIN_SRC css
  p::before { 
    content: "Read this: ";
  }
#+END_SRC

** [[https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors][Attribute selectors]]
#+BEGIN_SRC css
  /* <a> elements with a title attribute */
  a[title] {
    color: purple;
  }

  /* <a> elements with an href matching "https://example.org" */
  a[href="https://example.org"] {
    color: green;
  }

  /* <a> elements with an href containing "example" */
  a[href*="example"] {
    font-size: 2em;
  }

  /* <a> elements with an href ending ".org" */
  a[href$=".org"] {
    font-style: italic;
  }
#+END_SRC

* [[https://www.w3schools.com/cssref/default.asp][Properties]]
** align-items
- a sub-property of ~flexbox~

[[file:_img/screenshot_2018-05-10_16-43-38.png]]

-----
- https://css-tricks.com/almanac/properties/a/align-items/

** box-sizing
[[file:_img/screenshot_2018-04-05_16-31-52.png]]

[[file:_img/screenshot_2018-04-05_16-32-04.png]]

[[file:_img/screenshot_2018-04-05_16-32-23.png]]

#+BEGIN_SRC css
  html {
    box-sizing: border-box;
  }
#+END_SRC

-----
- https://www.abeautifulsite.net/box-sizing-border-box-explained

** margin
#+BEGIN_SRC css
  margin: <top> <right> <bottom> <left>;
  margin: <top,bottom> <right,left>;
  margin: <all>;
  margin: auto; /* set the margin to horizontally center the element */
#+END_SRC

* Topics
** Cascade Order
- https://www.w3.org/TR/CSS21/cascade.html#cascade
- https://stackoverflow.com/questions/9459062/in-which-order-do-css-stylesheets-override

- More specific rules override more general ones ::
  Specificity is defined based on how many IDs, classes, and element names are involved,
  as well as whether the ~!important~ declaration was used.

- When multiple rules of the same "specificity level" exist ::
  Whichever one appears last wins.

** Viewport
- https://www.w3schools.com/css/css_rwd_viewport.asp
- https://developers.google.com/web/fundamentals/design-and-ux/responsive/

User's visible area of a web page.

#+BEGIN_QUOTE
when we started surfing the internet using tablets and mobile phones, fixed size web pages were too large to fit the viewport.
To fix this, browsers on those devices scaled down the entire web page to fit the screen.
#+END_QUOTE

#+BEGIN_SRC html
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
#+END_SRC

- Based on the viewport, always use relative units for sizing

** Units
- https://www.w3schools.com/cssref/css_units.asp
- https://www.w3.org/Style/Examples/007/units.en.html
- https://webdesign.tutsplus.com/articles/7-css-units-you-might-not-know-about--cms-22573?ec_unit=translation-info-language

[[file:_img/screenshot_2018-03-01_15-51-32.png]]

*** px, %
- General units

*** em, ex, ch
- em ::
  equal to the inherited font size.
  If the font size of a ~<div>~ is set to ~16px~, ~1em~ within that ~<div>~ is equivalent to ~16px~.
- ex :: x-height of the current font OR one-half of one ~em~
- ch :: the width of the zero character, 0
- Use ~ex~ or ~ch~ if you want more granular control

*** rem
- Relative to font-size of the root element

#+BEGIN_SRC css
  body {
    font-size: 14px;
  }
  div {
    font-size: 1.2em;
  }
#+END_SRC

#+BEGIN_SRC html
  <body>
      <div>
          Test <!-- 14 * 1.2 = 16.8px -->
          <div>
              Test <!-- 16.8 * 1.2 = 20.16px -->
              <div>
                  Test <!-- 20.16 * 1.2 = 24.192px -->
              </div>
          </div>
      </div>
  </body>
#+END_SRC

#+BEGIN_SRC css
  html {
    font-size: 14px;
  }
  div {
  
    /* 'r' in rem stands for 'root'. 
    now all divs are sized as 16.8px */
    font-size: 1.2rem; 
  }
#+END_SRC

*** vw, vh, vmin, vmax
- vw :: Relative to 1% of the width of the viewport
- vh :: Relative to 1% of the height of the viewport
- vmin :: Relative to 1% of viewport's* smaller dimension
- vmax :: Relative to 1% of viewport's* larger dimension

*** cm, mm, in, pt, pc
- in :: inches (1in = 96px = 2.54cm)
- pt :: points (1pt = 1/72 of 1in)
- pc :: picas (1pc = 12 pt)

| em	   | Relative to the font-size of the element (2em means 2 times the size of the current font) |
| ex	   | Relative to the x-height of the current font (rarely used)                                |
| ch	   | Relative to width of the "0" (zero)                                                       |

** [[https://www.w3schools.com/cssref/css3_pr_mediaquery.asp][Media Queries]]
#+BEGIN_EXAMPLE
  @media not|only mediatype and (media feature and|or|not mediafeature) {
      CSS-Code;
  }
#+END_EXAMPLE
- Without the ~only~, an older browser is allowed to interpret ~screen and (color)~ as being the ~screen~ media type. 
- ~only~ is not needed in modern browsers ([[https://stackoverflow.com/questions/9286325/what-exactly-does-the-only-keyword-do-in-css-media-queries][ref]])

#+BEGIN_SRC css
  /* Set the background color of body to tan */
  body {
    background-color: tan;
  }

  /* On screens that are 992px or less, set the background color to blue */
  @media screen and (max-width: 992px) {
    body {
      background-color: blue;
    }
  }

  /* On screens that are 600px or less, set the background color to olive */
  @media screen and (max-width: 600px) {
    body {
      background-color: olive;
    }
  }
#+END_SRC

Examples for using media queries as breakpoints:
#+BEGIN_SRC css
  /* For mobile phones: */
  [class*="col-"] {
    width: 100%;
  }
  @media only screen and (min-width: 600px) {
    /* For tablets: */
    .col-s-1 {width: 8.33%;}
    .col-s-2 {width: 16.66%;}
    .col-s-3 {width: 25%;}
    .col-s-4 {width: 33.33%;}
    .col-s-5 {width: 41.66%;}
    .col-s-6 {width: 50%;}
    .col-s-7 {width: 58.33%;}
    .col-s-8 {width: 66.66%;}
    .col-s-9 {width: 75%;}
    .col-s-10 {width: 83.33%;}
    .col-s-11 {width: 91.66%;}
    .col-s-12 {width: 100%;}
  }
  @media only screen and (min-width: 768px) {
    /* For desktop: */
    .col-1 {width: 8.33%;}
    .col-2 {width: 16.66%;}
    .col-3 {width: 25%;}
    .col-4 {width: 33.33%;}
    .col-5 {width: 41.66%;}
    .col-6 {width: 50%;}
    .col-7 {width: 58.33%;}
    .col-8 {width: 66.66%;}
    .col-9 {width: 75%;}
    .col-10 {width: 83.33%;}
    .col-11 {width: 91.66%;}
    .col-12 {width: 100%;}
  }
#+END_SRC

#+BEGIN_SRC html
  <div class="row">
    <div class="col-3 col-s-3">...</div>
    <div class="col-6 col-s-9">...</div>
    <div class="col-3 col-s-12">...</div>
  </div>
#+END_SRC

-----
- https://www.w3schools.com/css/css_rwd_mediaqueries.asp

* Layouts
- http://learnlayout.com/

** flexbox
- Only each *child* (direct descendant) of a flex container becomes a *flex item*

[[file:_img/screenshot_2018-02-26_16-16-14.png]]

[[file:_img/screenshot_2018-02-26_16-15-47.png]]

[[file:_img/screenshot_2018-02-26_16-15-57.png]]

[[file:_img/screenshot_2018-02-26_16-17-34.png]]

[[file:_img/screenshot_2018-02-26_16-17-43.png]]

[[file:_img/screenshot_2018-02-26_16-20-00.png]]

[[file:_img/screenshot_2018-02-26_16-20-37.png]]

~flex-flow~ = ~flex-direction~ + ~flex-wrap~

[[file:_img/screenshot_2018-02-26_16-21-05.png]]

- ~flex~ ::  ~flex-grow~ ~flex-shrink~ ~flex-basis~

- ~flex-grow~ ::
  When there is some space available, items share the space based on the ratio of this value.
  When ~flex-grow~ is 0, so items will not grow larger than their ~flex-basis~ size.

- ~flex-shrink~ ::
  Whene there is less space than required, items shrink their spaces based on the ratio of this value

- ~flex-basis~ ::
  The default size of the item.

[[file:_img/screenshot_2018-02-26_16-22-58.png]]

[[file:_img/screenshot_2018-02-26_16-33-39.png]]

[[file:_img/screenshot_2018-02-26_16-32-41.png]]

[[file:_img/screenshot_2018-02-26_16-40-48.png]]

[[file:_img/screenshot_2018-02-26_16-40-30.png]]

[[file:_img/screenshot_2018-02-26_16-41-17.png]]

-----
- https://stackoverflow.com/questions/14148162/does-the-css-flexbox-module-work-on-direct-child-elements-only
- https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox
- https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Relationship_of_Flexbox_to_Other_Layout_Methods
