#+TITLE: AWS S3

* Table of Contents :TOC_2_gh:
- [[#overview][Overview]]
- [[#reference][Reference]]
  - [[#canned-acl][Canned ACL]]
- [[#topics][Topics]]
  - [[#iam-policy-vs-acl][IAM Policy vs. ACL]]
  - [[#server-side-encryption][Server Side Encryption]]
- [[#how-to][How-to]]
- [[#links][Links]]

* Overview
* Reference
** Canned ACL
:REFERENCES:
- https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl
:END:

* Topics
** IAM Policy vs. ACL
:REFERENCES:
- https://aws.amazon.com/blogs/security/iam-policies-and-bucket-policies-and-acls-oh-my-controlling-access-to-s3-resources/
- https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#acl-access-policy-permission-mapping
:END:

Overall: Can use both. But ~IAM~ is preferable, since it is more modern one.

#+BEGIN_QUOTE
S3 ACLs is a legacy access control mechanism that predates IAM.
#+END_QUOTE

#+BEGIN_QUOTE
If you want to manage permissions on individual objects within a bucket, S3 ACLs enable you to apply policies on the objects themselves, whereas bucket policies can only be applied at the bucket level.
#+END_QUOTE

- Union of all the IAM policies, S3 bucket policies, and S3 ACLs that apply.


** Server Side Encryption
#+BEGIN_QUOTE
There is no extra charge for encryption, and thereâ€™s *no observable effect* on PUT or GET performance.
#+END_QUOTE

It seems pointless as follows:
#+BEGIN_QUOTE
Wait a minute? What are we protecting against? Someone gaining access to Amazon's data centers and stealing hard disks?
Or worse, a disgruntled Amazon employee (do such people exist?) plugging in a USB stick and sucking out your precious data.
#+END_QUOTE

[[file:_img/screenshot_2017-02-25_09-48-12.png]]

:REFERENCES:
- https://aws.amazon.com/ko/blogs/aws/s3-encryption-with-your-keys/
- http://alan.blog-city.com/amazon_s3_encryption.htm
:END:

* How-to
* Links
