* Design of Computer Programs
** About this Course
This is my study note of the free course named [[https://www.udacity.com/course/design-of-computer-programs--cs212][Design of Computer Programs]] from Udacity.

This course teaches how to approach programming problems and
how to fight against the complexity of programs,
which are the most important skills for a programmer to possess.

The professor, [[http://norvig.com/][Peter Norvig]], teaches these skills through a pose-try-feedback loop.

The lessons consists of small programming problems.
He makes us solve them first, and then shows his own solution as feedback.
Most of the time, I was surprised by his elegant solutions.

This is one of my favorite computer courses of all time.

** Lessons
- [[design-of-computer-programs-1.org][Lesson 1]]: Poker
- [[design-of-computer-programs-2.org][Lesson 2]]: Zebra Puzzle, Cryptarithmetic
- [[design-of-computer-programs-3.org][Lesson 3]]: Regex, Parser
- [[design-of-computer-programs-4.org][Lesson 4]]: Water Pouring, Bridge, Missionaries and Cannibals
- [[design-of-computer-programs-5.org][Lesson 5]]: Porcine Probability
- [[design-of-computer-programs-6.org][Lesson 6]]: Word Games
- [[design-of-computer-programs-7.org][Lesson 7]]: Practice Exam

** Note
This study note is *NOT* exhaustive.  I wrote things only relevant to me.
