* Why we use Terraform and not Chef, Puppet, Ansible, SaltStack, or CloudFormation
- [2016-12-29 Thu]
- https://blog.gruntwork.io/why-we-use-terraform-and-not-chef-puppet-ansible-saltstack-or-cloudformation-7989dad2865c#.7fsvtvl2v

[[file:img/screenshot_2016-12-29_09-31-51.png]]

** Configuration Management, Orchestration, Mutable, Immutable
The main use case of *Orchestration*-typed tools is provisioning servers.
Even though some of tools categorized as *Configuration Management* can do provision servers,
their main feature is modifying existing servers.

This relates to mutability of servers.  Tools categorized immutable can't mutate servers once they provisioned.
If there is an update, they should build a new image and provision new servers with it and then destroy old servers.

This way feels more simpler and can prevent [[http://www.continuitysoftware.com/blog/what-is-configuration-drift/][Configuration Drift]] problem.

** Packer
I got to know [[https://www.packer.io/][Packer]] for building AMIs.
