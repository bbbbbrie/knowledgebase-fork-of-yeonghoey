#+TITLE: go

* Table of Contents :TOC_1_gh:
 - [[#error][error]]
 - [[#log][log]]
 - [[#range][range]]
 - [[#documenting-packages][Documenting Packages]]
 - [[#staging][Staging]]

* error
#+BEGIN_SRC go
  fmt.Errorf("parsing %s as HTML: %v", url, err)
#+END_SRC

gopl book says:
#+BEGIN_QUOTE
Because error messages are frequently chained together,
message strings should not be capitalized and newlines should be avoided.
#+END_QUOTE

* log
#+BEGIN_SRC go
  log.Fatalf("Site is down: %v\n", err)
#+END_SRC

* range
+ https://gobyexample.com/range

#+BEGIN_SRC go
  slice, kvs := []int{...}, map[string]string{...}
  for _, num := range nums {}  // if idx not needed
  for i, num := range nums {}
  for k, v := range kvs {}
  for k := range kvs {}        // just keys
  for i, c := range "go" {}    // 'c' is 'rune' of the string
#+END_SRC

* Documenting Packages
- https://blog.golang.org/godoc-documenting-go-code

#+BEGIN_SRC go
  // Fprint formats using the default formats for its operands and writes to w.
  // Spaces are added between operands when neither is a string.
  // It returns the number of bytes written and any write error encountered.
  func Fprint(w io.Writer, a ...interface{}) (n int, err error) {
#+END_SRC

gopl book says:
#+BEGIN_QUOTE
Go doc comments are always complete sentences, and the first sentence is
usually a summary that starts with the name being declared.
#+END_QUOTE
* Staging
** TODO <2017-03-13 Mon> go build vs go install
https://www.quora.com/What-is-the-difference-between-build-and-install-in-Go

#+BEGIN_QUOTE
Go install do a little more. It move the executable file to $GOPATH/bin and cache all non-main packages which imported to $GOPATH/pkg. the cache will be use in the next compile if it not changed yet. 
#+END_QUOTE

#+BEGIN_EXAMPLE
  When compiling a single main package, build writes
  the resulting executable to an output file named after
  the first source file ('go build ed.go rx.go' writes 'ed' or 'ed.exe')
  or the source code directory ('go build unix/sam' writes 'sam' or 'sam.exe').
  The '.exe' suffix is added when writing a Windows executable.
#+END_EXAMPLE

** TODO <2017-03-19 Sun> gobyexample
- https://gobyexample.com/

** TODO <2017-03-19 Sun> go formatting
- https://gobyexample.com/string-formatting

** TODO <2017-03-19 Sun> go re2
- https://github.com/google/re2/wiki/Syntax

** TODO <2017-03-15 Wed> go new
- https://golang.org/doc/effective_go.html#allocation_new
 
#+BEGIN_SRC go
  p := new(SyncedBuffer)  // type *SyncedBuffer
  var v SyncedBuffer      // type  SyncedBuffer
#+END_SRC

** TODO <2017-03-18 Sat> go project structure
- https://github.com/tj/mmake
