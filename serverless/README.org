#+TITLE: Serverless

* Table of Contents :TOC_3_gh:
- [[#overview][Overview]]
- [[#reference][Reference]]
  - [[#serverlessyml][serverless.yml]]
  - [[#serverless-python-requirements][serverless-python-requirements]]
  - [[#serverless-wsgi][serverless-wsgi]]
- [[#topics][Topics]]
  - [[#services][Services]]
    - [[#serverlessyml-1][serverless.yml]]
  - [[#functions][Functions]]
  - [[#events][Events]]
  - [[#resources][Resources]]
  - [[#deploying][Deploying]]
  - [[#variables][Variables]]
  - [[#packaging][Packaging]]
  - [[#plugins][Plugins]]
- [[#how-to][How-to]]
  - [[#deploy-flask-app][Deploy Flask App]]

* Overview
#+BEGIN_SRC shell
  npm install -g serverless
#+END_SRC

* Reference
** serverless.yml
- https://serverless.com/framework/docs/providers/aws/guide/serverless.yml/

** serverless-python-requirements
- https://github.com/UnitedIncome/serverless-python-requirements
- https://serverless.com/blog/serverless-python-packaging/

- ~dockerizePip: non-linux~ for making Lambda compatible packaging
- Supports ~Pipenv~ by default

** serverless-wsgi
- https://github.com/logandk/serverless-wsgi

#+BEGIN_SRC yaml
  service: example

  provider:
    name: aws
    runtime: python2.7

  plugins:
    - serverless-wsgi

  functions:
    api:
      handler: wsgi.handler
      events:
        - http: ANY /
        - http: ANY {proxy+}

  custom:
    wsgi:
      app: api.app
#+END_SRC

#+BEGIN_SRC shell
  # For development
  sls wsgi serve
#+END_SRC

#+BEGIN_EXAMPLE
   ,* Running on http://localhost:5000/ (Press CTRL+C to quit)
   ,* Restarting with stat
   ,* Debugger is active!
   ,* Debugger PIN: 109-942-480
#+END_EXAMPLE

* Topics
** Services
- https://serverless.com/framework/docs/providers/aws/guide/services/

#+BEGIN_EXAMPLE
  users/
    serverless.yml # Contains 4 functions that do Users CRUD operations and the Users database
  posts/
    serverless.yml # Contains 4 functions that do Posts CRUD operations and the Posts database
  comments/
    serverless.yml # Contains 4 functions that do Comments CRUD operations and the Comments database
#+END_EXAMPLE

#+BEGIN_SRC shell
  serverless create --template aws-nodejs --path myService
#+END_SRC

*** serverless.yml
- Declare a Serverless service
- Define one or more functions in the service
- Define the provider the service will be deployed to (and the runtime if provided)
- Define any custom plugins to be used
- Define events that trigger each function to execute (e.g. HTTP requests)
- Define a set of resources (e.g. 1 DynamoDB table) required by the functions in this service
- Allow events listed in the events section to automatically create the resources required for the event upon deployment
- Allow flexible configuration using Serverless Variables
** Functions
- https://serverless.com/framework/docs/providers/aws/guide/functions/
- Your functions can either inherit their settings from the ~provider~ property.

#+BEGIN_SRC yaml
  functions:
    functionOne:
      handler: handler.functionOne
      description: optional description for your Lambda
    functionTwo:
      handler: handler.functionTwo
    functionThree:
      handler: handler.functionThree
#+END_SRC
** Events
- https://serverless.com/framework/docs/providers/aws/guide/events/

** Resources
- https://serverless.com/framework/docs/providers/aws/guide/resources/

** Deploying
- https://serverless.com/framework/docs/providers/aws/guide/deploying/

#+BEGIN_SRC shell
  serverless deploy --verbose                      # uses AWS CloudFormation Stack Update
  serverless deploy function --function myFunction # updates AWS Lambda only
  serverless deploy --stage production --region eu-central-1
#+END_SRC
** Variables
- https://serverless.com/framework/docs/providers/aws/guide/variables/

#+BEGIN_SRC yaml
  x: ${env:NAME}                 # Environment Variables
  x: ${opt:stage}                # CLI Options
  x: ${cf:service.name}          # CloudFormation
  x: ${self:custom.stage}        # self reference
  x: ${s3:bucket/key}            # value(content) of the s3 object
  x: ${file(../config.yml):name} # js, json or yaml, can be json object or equivalents
#+END_SRC

** Packaging
- https://serverless.com/framework/docs/providers/aws/guide/packaging/

#+BEGIN_SRC shell
  serverless package
  serverless package --package my-artifacts
#+END_SRC

Serverless will *run the glob patterns in order.*
At first it will apply the globs defined in ~exclude~. After that it'll add all the globs from ~include~. 
#+BEGIN_SRC yaml
  package:
    exclude:
      - src/**
    include:
      - src/function/handler.js
#+END_SRC

- https://github.com/serverless/serverless/blob/master/lib/plugins/package/lib/packageService.js
#+BEGIN_SRC javascript
  module.exports = {
    defaultExcludes: [
      '.git/**',
      '.gitignore',
      '.DS_Store',
      'npm-debug.log',
      'serverless.yml',
      'serverless.yaml',
      'serverless.json',
      'serverless.js',
      '.serverless/**',
      '.serverless_plugins/**',
    ],
#+END_SRC

** Plugins
- https://github.com/serverless/plugins

* How-to
** Deploy Flask App
- https://serverless.com/blog/serverless-python-packaging/
- https://serverless.com/blog/flask-python-rest-api-serverless-lambda-dynamodb/

#+BEGIN_SRC shell
  npm init -f
  npm install --save-dev serverless-wsgi serverless-python-requirements
#+END_SRC
