#+TITLE: [[https://sass-lang.com/guide][Sass]]

* Table of Contents :TOC_2_gh:
- [[#guide][Guide]]
  - [[#variables][Variables]]
  - [[#nesting][Nesting]]
  - [[#import][Import]]
  - [[#mixins][Mixins]]
  - [[#extendinheritance][Extend/Inheritance]]
  - [[#operators][Operators]]
- [[#reference][Reference]]
  - [[#interpolation][interpolation]]
- [[#topics][Topics]]
  - [[#sass-vs-scss][~.sass~ vs ~.scss~]]
  - [[#how-to-calculate-units-like-percent-viewport-things][How to calculate units like percent, viewport things?]]

* Guide
** Variables
#+BEGIN_SRC scss
  $font-stack:    Helvetica, sans-serif;
  $primary-color: #333;

  body {
    font: 100% $font-stack;
    color: $primary-color;
  }
#+END_SRC

** Nesting
#+BEGIN_SRC scss
  nav {
    ul {
      margin: 0;
      padding: 0;
      list-style: none;
    }

    li { display: inline-block; }

    a {
      display: block;
      padding: 6px 12px;
      text-decoration: none;
    }
  }
#+END_SRC

#+BEGIN_SRC css
  nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  nav li {
    display: inline-block;
  }

  nav a {
    display: block;
    padding: 6px 12px;
    text-decoration: none;
  }
#+END_SRC

** Import
- The underscore in the filename (~_reset.scss~) lets Sass know that the file is only a partial file and that it should not be generated into a CSS file.

#+BEGIN_SRC scss
  // _reset.scss

  html,
  body,
  ul,
  ol {
    margin:  0;
    padding: 0;
  }
#+END_SRC

#+BEGIN_SRC scss
  // base.scss

  @import 'reset';

  body {
    font: 100% Helvetica, sans-serif;
    background-color: #efefef;
  }
#+END_SRC

** Mixins
#+BEGIN_SRC scss
  @mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
  }

  .box { @include border-radius(10px); }
#+END_SRC

#+BEGIN_SRC css
  .box {
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    -ms-border-radius: 10px;
    border-radius: 10px;
  }
#+END_SRC

** Extend/Inheritance
#+BEGIN_SRC scss
  // This CSS won't print because %equal-heights is never extended.
  %equal-heights {
    display: flex;
    flex-wrap: wrap;
  }

  // This CSS will print because %message-shared is extended.
  %message-shared {
    border: 1px solid #ccc;
    padding: 10px;
    color: #333;
  }

  .message {
    @extend %message-shared;
  }

  .success {
    @extend %message-shared;
    border-color: green;
  }

  .error {
    @extend %message-shared;
    border-color: red;
  }

  .warning {
    @extend %message-shared;
    border-color: yellow;
  }
#+END_SRC

** Operators
#+BEGIN_SRC scss
  .container { width: 100%; }


  article[role="main"] {
    float: left;
    width: 600px / 960px * 100%;
  }

  aside[role="complementary"] {
    float: right;
    width: 300px / 960px * 100%;
  }
#+END_SRC

* Reference
** interpolation
#+BEGIN_SRC scss
  $name: foo;
  $attr: border;
  p.#{$name} {
    #{$attr}-color: blue;
  }
#+END_SRC
-----
- http://sass-lang.com/documentation/file.SASS_REFERENCE.html#interpolation_

* Topics
** ~.sass~ vs ~.scss~
- So, use ~.scss~, ~.scss~ is the official default.
- ~.sass~ has a concise, indent based syntax, and older one.

** How to calculate units like percent, viewport things?
#+BEGIN_QUOTE
Sass has no way of knowing exactly how wide "100%" is in terms of pixels or any other unit.
#+END_QUOTE

Use ~calc()~ from CSS standards or use interpolation(~#{$var}~) as following:
#+BEGIN_SRC scss
  $a: 25%;
  $b: 5px;

  .foo {
    width: -webkit-calc(#{$a} - #{$b});
    width:    -moz-calc(#{$a} - #{$b});
    width:         calc(#{$a} - #{$b});
  }
#+END_SRC
-----
- https://stackoverflow.com/questions/13274599/sass-calculate-percent-minus-px
