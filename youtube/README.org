#+TITLE: YouTube

* Table of Contents                                                :TOC_2_gh:
 - [[#goto-2016--seven-secrets-of-maintainable-codebases--adam-tornhill][GOTO 2016 • Seven Secrets of Maintainable Codebases • Adam Tornhill]]
 - [[#goto-2016--the-error-of-our-ways--kevlin-henney][GOTO 2016 • The Error of Our Ways • Kevlin Henney]]
 - [[#goto-2016--the-future-of-software-engineering--mary-poppendieck][GOTO 2016 • The Future of Software Engineering • Mary Poppendieck]]
 - [[#how-to-work-at-google--example-codingengineering-interview][How to: Work at Google — Example Coding/Engineering Interview]]
 - [[#scala-collections-why-not][Scala Collections: Why Not?]]

* GOTO 2016 • Seven Secrets of Maintainable Codebases • Adam Tornhill
- [2017-01-02 Mon]
- https://youtu.be/0oDporwhToQ

He emphasizes to find out hotspots of the codebase, and concentrate efforts to improve them.
He shows many ways to find out hotspots.

[[file:img/screenshot_2017-01-02_09-27-53.png]]

[[file:img/screenshot_2017-01-02_09-30-27.png]]

[[file:img/screenshot_2017-01-02_22-11-52.png]]

* GOTO 2016 • The Error of Our Ways • Kevlin Henney
- [2017-01-02 Mon]
- https://youtu.be/IiGXq3yY70o

[[file:img/screenshot_2017-01-02_22-12-15.png]]

[[file:img/screenshot_2017-01-02_22-21-14.png]]

I like his design of slides.

[[file:img/screenshot_2017-01-02_22-22-14.png]]

I'd like to like that book, even though it's a book on architecture(building).

[[file:img/screenshot_2017-01-02_22-25-53.png]]

His test code looks great.

[[file:img/screenshot_2017-01-02_22-26-22.png]]

Great organization

* GOTO 2016 • The Future of Software Engineering • Mary Poppendieck
- [2017-01-22 Sun]
- https://youtu.be/6K4ljFZWgW8

[[file:img/screenshot_2017-01-22_09-53-26.png]]
* How to: Work at Google — Example Coding/Engineering Interview
- [2017-01-22 Sun]
- https://youtu.be/XKu_SEDAykw

[[file:img/screenshot_2017-01-22_09-47-51.png]]

1. Clarification
2. Think out loud
3. Talk before you write
4. Test your solution

* Scala Collections: Why Not?
- [2017-01-02 Mon]
- https://youtu.be/uiJycy6dFSQ
- Presented by a ~scala~ core contributor, Paul Phillips

He quit ~scala~ because he figured out that he couldn't make ~scala~ a language he desired for.

In the presentation, He shows some ugly part of ~scala~.

[[file:img/screenshot_2017-01-02_09-25-16.png]]

