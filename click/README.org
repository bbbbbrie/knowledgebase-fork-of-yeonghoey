#+TITLE: click

* Table of Contents :TOC_2_gh:
- [[#overview][Overview]]
- [[#reference][Reference]]
- [[#terminology][Terminology]]
- [[#topics][Topics]]
  - [[#param_decls][param_decls]]
- [[#how-to][How-to]]
- [[#links][Links]]
- [[#staging][Staging]]

* Overview
#+BEGIN_SRC python
  @click.command()
  @click.option('--count', default=1, help='number of greetings')
  @click.argument('name')
  def hello(count, name):
      for x in range(count):
          click.echo('Hello %s!' % name)
#+END_SRC

#+BEGIN_SRC python
  @click.group()
  def cli():
      pass

  @cli.command()
  def initdb():
      click.echo('Initialized the database')

  @cli.command()
  def dropdb():
      click.echo('Dropped the database')
#+END_SRC

* Reference
* Terminology
* Topics
** param_decls
- http://click.pocoo.org/5/parameters/#parameter-names
- http://click.pocoo.org/5/api/#parameters

- ~Parameter~ is the base class of ~option~ and ~argument~.
- Positional arguments of ~option~ and ~argument~ become ~param_decl~
- If a string is added *without any dashes*, it becomes the parameter name.
- The parameter name is generated automatically by taking *the longest argument and converting all dashes to underscores.*

#+BEGIN_SRC python
  @click.option('-v', count=True)
  def foo(v):

  @click.option('-v', '--verbose', count=True)  # longest n
  def foo(verbose):

  @click.option('vvv', '-v', '--verbose', count=True)
  def foo(vvv):
#+END_SRC

* How-to
* Links
* Staging
