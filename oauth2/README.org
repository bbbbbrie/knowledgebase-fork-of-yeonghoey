#+TITLE: OAuth 2.0

* Table of Contents :TOC_3_gh:
- [[#overview][Overview]]
- [[#concepts][Concepts]]
  - [[#state][state]]
  - [[#refresh-tokens][Refresh Tokens]]
- [[#links][Links]]

* Overview
- https://www.ibuildings.nl/blog/2013/07/secure-your-rest-api-oauth2-implicit-grant

[[file:_img/screenshot_2018-01-11_15-50-31.png]]

* Concepts
** state
1. Provides the following link to the user
#+BEGIN_EXAMPLE
  https://authorization-server.com/auth?response_type=code&
    client_id=CLIENT_ID&redirect_uri=REDIRECT_URI&scope=photos&state=1234zyx
#+END_EXAMPLE

~state~: A random string generated by your application, which you'll verify later.

2. User allows the acess
[[file:_img/screenshot_2018-03-05_18-19-39.png]]

3. User redirects to the following link.
#+BEGIN_EXAMPLE
  https://example-app.com/cb?code=AUTH_CODE_HERE&state=1234zyx
#+END_EXAMPLE

You should first compare this ~state~ value to ensure it matches the one you started with.
You can typically store the ~state~ value in a cookie or session, and compare it when the user comes back.
This ensures *your redirection endpoint isn't able to be tricked* into attempting to exchange arbitrary authorization codes.

This prevents CSRF(Cross Site Request Forgery), which let the victim login as the attacker.

[[file:_img/screenshot_2018-03-05_18-57-46.png]]

** Refresh Tokens
- https://auth0.com/learn/refresh-tokens/
- https://auth0.com/blog/refresh-tokens-what-are-they-and-when-to-use-them/

[[file:_img/screenshot_2018-03-09_20-38-24.png]]

- A special kind of token that can be used to obtain a renewed access token
- Refresh tokens must be stored securely by an application because they essentially allow a user to remain authenticated forever.
- Refresh Tokens never expire.

#+BEGIN_EXAMPLE
  curl -X POST -H 'Authorization: Basic dGVzdGNsaWVudDpzZWNyZXQ=' -d 'refresh_token=<prev_refresh_token>&grant_type=refresh_token' localhost:3000/oauth/token
  {
      "token_type":"bearer",
      "access_token":"<new_access_token>",
      "expires_in":20,
      "refresh_token":"<new_refresh_token>"
  }
#+END_EXAMPLE

* Links
- [[https://www.udacity.com/course/authentication-authorization-oauth--ud330][Udacity: Authentication & Authorization: OAuth]]
- https://developers.google.com/oauthplayground/
- https://aaronparecki.com/oauth-2-simplified/
