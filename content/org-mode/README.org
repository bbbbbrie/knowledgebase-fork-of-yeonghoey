#+TITLE: Org Mode

* Table of Contents :TOC_3_gh:
- [[#settings][Settings]]
  - [[#omitting-title][Omitting #+TITLE]]
- [[#markup][Markup]]
  - [[#code-vs-verbatim][code(~~) vs verbatim(==)]]
  - [[#cant-stylize-part-of-a-word][Can't stylize part of a word]]
- [[#easy-templates][Easy Templates]]
- [[#babel][Babel]]
- [[#latex][LaTeX]]
- [[#export][Export]]
- [[#image][Image]]
- [[#agenda][Agenda]]
- [[#capture][Capture]]
- [[#add-ons][Add-ons]]
  - [[#toc-org][toc-org]]
  - [[#org-reveal][org-reveal]]
  - [[#ox-twbs][ox-twbs]]
- [[#use-cases][Use Cases]]
  - [[#automatically-save-buffers-after-refiling-and-archiving][Automatically Save buffers after refiling and archiving]]

* Settings
#+BEGIN_EXAMPLE
  ,#+TITLE:  Org Document Settings Cheatsheet
  ,#+AUTHOR: Yeongho Kim
  ,#+EMAIL:  yeonghoey@gmail.com
  ,#+DESCRIPTION: a description
  ,#+KEYWORDS:    org
  ,#+LANGUAGE:    en

  ,#+OPTIONS: H:4      (section numbering)
  ,#+OPTIONS: num:nil  (no number)
  ,#+OPTIONS: toc:2    (only inlcude two levels in TOC)
  ,#+OPTIONS: toc:nil  (no default TOC at all)

  ,#+TOC: headlines 2        (insert TOC here)
  ,#+TOC: headlines 1 local  (insert local TOC, direct children only)
  ,#+TOC: listings           (build a list of listings)
  ,#+TOC: tables             (build a list of tables)

  ,#+INCLUDE: "~/.emacs" src emacs-lisp
  ,#+INCLUDE: "~/my-book/chapter2.org" :minlevel 1
  ,#+INCLUDE: "~/.emacs" :lines "5-10"                 [5 to 10)
  ,#+INCLUDE: "~/.emacs" :lines "-10"                  [1 to 10)
  ,#+INCLUDE: "~/.emacs" :lines "10-"                  [10 to EOF)
  ,#+INCLUDE: "./paper.org::#theory" :only-contents t  (custom-id)
  ,#+INCLUDE: "./paper.org::mytable"                   (named element)
  ,#+INCLUDE: "./paper.org::*conclusion" :lines 1-20   (headline named 'conclusion')

  ,#+MACRO: name   replacement text $1, $2 are arguments
  {{{name(arg1, arg2)}}}
  {{{title}}}
  {{{author}}}
  {{{email}}}
  {{{date}}}
  {{{date(FORMAT)}}}
  {{{time(FORMAT)}}}
  {{{modification-time(FORMAT, VC)}}}
  {{{input-file}}}
  {{{property(PROPERTY-NAME)}}}
  {{{property(PROPERTY-NAME,SEARCH-OPTION)}}}

  ,* Goldberg Variations
  :PROPERTIES:
  :Title:     Goldberg Variations
  :Composer:  J.S. Bach
  :Artist:    Glen Gould
  :Publisher: Deutsche Grammophon
  :NDisks:    1
  :END:
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  ,#+OPTIONS: ':t
  ,#+OPTIONS: author:nil
  ,#+OPTIONS: num:nil
  ,#+OPTIONS: email:nil
  ,#+OPTIONS: date:nil

  ,#+OPTIONS: ':t author:nil date:nil email:nil num:nil
#+END_EXAMPLE

:REFERENCES:
- https://github.com/fniessen/refcard-org-mode
- http://orgmode.org/manual/Structural-markup-elements.html
- http://orgmode.org/manual/Export-settings.html
:END:

** Omitting #+TITLE
#+BEGIN_QUOTE
If you are exporting only a subtree,
*its heading will become the title of the document.
If the subtree has a property EXPORT_TITLE, that will take precedence.
#+END_QUOTE

:REFERENCES:
- http://orgmode.org/manual/Document-title.html#Document-title
:END:

* Markup
#+BEGIN_EXAMPLE
    ,* 1st level heading
    ,** this is 2nd level heading
    ,*** this is 3rd level heading

    ,*bold*
    /italic/
    _underlined_
    =verbatim=
    ~code~
    +strike-through+
    X_{subscript}, X^{superscript}

    Hello, \\  (enforce line break within a paragraph)
    World.

    - 1st item
    ,* another item
    + and 3rd item :: this is a description

    1. 1st item
    2) another item

    20. [@20] Test
    21. xargs
    22. bcadf

    [[http://example.com/]]
    [[http://example.com/][description]]

    -----
    (a horizontal rule, 5 or more only dashes)

    ,#+BEGIN_EXAMPLE
      verbatime example
    ,#+END_EXAMPLE

    ,#+BEGIN_SOURCE python
      print 'hello, world!'
    ,#+END+SOURCE

    : a single line example
      : can be indented
    (start the example lines with a colon followed by a space.)
#+END_EXAMPLE

:REFERENCES:
- http://orgmode.org/manual/Markup.html#Markup
- http://ergoemacs.org/emacs/emacs_org_markup.html
- http://orgmode.org/manual/External-links.html#External-links
:END:

** code(~~) vs verbatim(==)
- There are some differences in ~Latex~ related things, but *identical others*.

:REFERENCES:
- http://stackoverflow.com/questions/18991981/difference-between-code-and-verbatim-in-org-mode
:END:

** Can't stylize part of a word
#+BEGIN_QUOTE
Org-mode relies on heuristics to distinguish emphasis from
normal text, and one of the most important parts of this
heuristics method is *assuming that emphasis is on whole words*,
delimited by whitespace or punctuation.
#+END_QUOTE

:REFERENCES:
- http://stackoverflow.com/questions/1218238/how-to-make-part-of-a-word-bold-in-org-mode
:END:

* Easy Templates
#+BEGIN_EXAMPLE
  s #+BEGIN_SRC ... #+END_SRC
  e #+BEGIN_EXAMPLE ... #+END_EXAMPLE
  q #+BEGIN_QUOTE ... #+END_QUOTE
  v #+BEGIN_VERSE ... #+END_VERSE
  c #+BEGIN_CENTER ... #+END_CENTER
  l #+BEGIN_LaTeX ... #+END_LaTeX
  L #+LaTeX:
  h #+BEGIN_HTML ... #+END_HTML
  H #+HTML:
  a #+BEGIN_ASCII ... #+END_ASCII
  A #+ASCII:
  i #+INDEX: line
  I #+INCLUDE: lin
#+END_EXAMPLE

:REFERENCES:
- http://orgmode.org/manual/Easy-Templates.html
:END:

* Babel
For about ~#+BEGIN_SRC~, see [[./babel]]

* LaTeX
When using LaTex as a part of documentations which will be exported some other forms like ~html~ and the like,
use [[/org-babel/latex]] instead of native org-mode's LaTeX supprot.

#+BEGIN_EXAMPLE
  ,#+LATEX: any arbitrary LaTeX code
  ---
  <l + <TAB>
  ,#+BEGIN_EXPORT latex
  any arbitrary LaTeX code
  ,#+END_EXPORT
#+END_EXAMPLE

- LaTex fragments :: Just put latex code
  preview with ~org-toggle-latex-fragment~ 
  ~â€‹, T x~ or ~C-c C-x C-l~
- This won't be exported.

#+BEGIN_EXAMPLE
  \begin{equation}
  x=\sqrt{b}
  \end{equation}
#+END_EXAMPLE

:REFERENCES:
- http://orgmode.org/manual/LaTeX-export.html#LaTeX-export
:END:

* Export
#+BEGIN_EXAMPLE
  ,#+OPTIONS: author:nil html-postamble:nil num:nil timestamp:nil toc:nil

#+END_EXAMPLE

#+BEGIN_EXAMPLE
  ,,#+CAPTION: A black cat stalking a spider
  ,,#+ATTR_HTML: :alt cat/spider image :title Action! :align right
  [[./img/a.jpg]]
#+END_EXAMPLE

- https://github.com/yyr/org-mode/blob/master/lisp/ox-html.el#L807
- https://emacs.stackexchange.com/questions/7629/the-syntax-highlight-and-indentation-of-source-code-block-in-exported-html-file

#+BEGIN_SRC emacs-lisp
  (setq org-html-htmlize-output-type 'css)
#+END_SRC
~org-html-htmlize-output-type~ is ~inline-css~ by default, which generates ~css~ for code formatting
based on th current editor color theme. To customize for editor free exporting, set it to ~css~ like above
and specify your custom ~css~

:REFERENCES:
- http://orgmode.org/manual/Exporting.html
- http://stackoverflow.com/questions/13363267/how-to-remove-footer-details-in-org-mode-html-export
- https://www.gnu.org/software/emacs/manual/html_node/org/Images-in-HTML-export.html
:END:

* Image
#+BEGIN_EXAMPLE
  ,#+ATTR_HTML: width="100px"
  ,#+ATTR_ORG: :width 100
  [[~/images/example.jpg]]
#+END_EXAMPLE

:REFERENCES:
- http://stackoverflow.com/questions/11670654/how-to-resize-images-in-org-mode
- http://orgmode.org/worg/org-tutorials/images-and-xhtml-export.html
:END:

* Agenda
#+BEGIN_EXAMPLE
  <2006-11-01 Wed>
  [2006-11-01 Wed]  # inactive timestamps, they do not trigger an entry to show up in the agenda.
#+END_EXAMPLE

:REFERENCES:
- http://orgmode.org/manual/Capture-templates.html#Capture-templates
:END:

* Capture
#+BEGIN_SRC emacs-lisp
  (setq-default
   org-capture-templates `(("c" "Create a task"
                            entry (file+headline ,my-org-inbox "Inbox")
                            "* TODO %t %?"
                            :empty-lines 1)
   )
#+END_SRC

:REFERENCES:
- http://orgmode.org/manual/Template-expansion.html#Template-expansion 
:END:

* Add-ons
** toc-org
#+BEGIN_EXAMPLE
  :TOC_2:
  :TOC_2_gh:   (github style, [[#heading][heading]])
  :TOC_2_org:  (org style,    [[heading][heading]])
#+END_EXAMPLE

:REFERENCES:
- https://github.com/snosov1/toc-org
:END:

** org-reveal
- ~, e R B~ to generate and preview
- ~#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/~
- ~#+REVEAL_THEME: <theme>~ :: [[https://github.com/hakimel/reveal.js/tree/master/css/theme][reveal.js/css/theme]] 

:REFERENCES:
- https://github.com/yjwen/org-reveal/
- https://github.com/hakimel/reveal.js/
:END:

** ox-twbs
- Export org as HTML compatible with Twitter Bootstrap.
- I tried to use this, but *there were some inconsistencies*. I don't use it now.
  - Some colors are indistinguishable.
  - Image links are broken if I segregate htmls from orgs

:REFERENCES:
- https://github.com/marsmining/ox-twbs
:END:

* Use Cases
** Automatically Save buffers after refiling and archiving
#+BEGIN_SRC emacs-lisp
    ;; Save org files automatically after arranging items
    (defun my-org-save-all-org-buffers (old-function &rest args)
      (org-save-all-org-buffers)
      )
    (advice-add 'org-refile :after 'my-org-save-all-org-buffers)
    (advice-add 'org-archive :after 'my-org-save-all-org-buffers)
#+END_SRC

:REFERENCES:
- https://emacs.stackexchange.com/questions/477/how-do-i-automatically-save-org-mode-buffers
- http://stackoverflow.com/questions/5520302/what-do-each-of-these-stand-for-after-the-save-file-prompt-y-n-q-c
:END:
