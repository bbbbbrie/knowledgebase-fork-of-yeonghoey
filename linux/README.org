#+TITLE: Linux

* Table of Contents :TOC_2_gh:
- [[#overview][Overview]]
- [[#how-to][How-to]]
  - [[#config-swap-spacesfiles][Config swap spaces/files]]
  - [[#mount-a-volume][Mount a Volume]]
- [[#topics][Topics]]
  - [[#inode-structure][Inode Structure]]
- [[#reference][Reference]]
  - [[#iostat][iostat]]
  - [[#top][top]]
- [[#terminology][Terminology]]
- [[#staging][Staging]]

* Overview
- http://www.brendangregg.com/linuxperf.html

[[file:img/screenshot_2017-08-16_20-34-39.png]]
* How-to
** Config swap spaces/files
#+BEGIN_SRC shell
  [root]$ mkswap /dev/hdb1
  [root]$ swapon /dev/hdb1
#+END_SRC

#+BEGIN_SRC shell
  [root]$ dd if=/dev/zero of=/swap_file bs=1024k count=num_mb
  [root]$ mkswap /swap_file
  [root]$ swapon /swap_file
#+END_SRC

#+BEGIN_SRC shell
  [root]$ swapoff -a  # turns off all swap spaces
  [root]$ rm -f /swap_file
#+END_SRC

** Mount a Volume
- http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html
- https://en.wikipedia.org/wiki/Fstab

#+BEGIN_SRC shell
  # view your available disk devices and their mount points
  [root]$ lsblk
  NAME  MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
  xvdf  202:80   0  100G  0 disk
  xvda1 202:1    0    8G  0 disk /

  # check other details
  [root]$ blkid
  /dev/xvda1: LABEL="/" UUID="abcdefgh-1234-ijkl-4567-qwertyasdfgh" TYPE="ext4" PARTLABEL="Linux" PARTUUID="12321555-asda-asas-asdg-142khkhkhcsd"
#+END_SRC

#+BEGIN_SRC shell
  [root]$ file -s /dev/xvda1
  /dev/xvda1: Linux rev 1.0 ext4 filesystem data, UUID=1701d228-e1bd-4094-a14c-8c64d6819362, ...

  [root]$ file -s /dev/xvdf
  /dev/xvdf: data  # no file system
#+END_SRC

#+BEGIN_SRC shell
  [root]$ mkfs -t ext4 /dev/xvdf
  [root]$ mkdir /my/path
  [root]$ mount /dev/xvdf /my/path
#+END_SRC

#+BEGIN_SRC shell
  # Mount the volume permanently
  [root]$ cp /etc/fstab /etc/fstab.orig  # backup

  # /etc/fstab : columns are separated with ' ' or '\t'
  # ------------------------------------------------------------------------------
  # Use UUID because /dev/xvdf may change
  # - check UUID from the output of file -s /dev/xvdf
  # SEE: $ man fstab
  # - 0 stands for (not dumping, default)
  # - 2 stands for (other than root volume)
  /dev/xvda1  (...)
  UUID=de9a1ccd-a2dd-44f1-8be8-2d4275cb85a3  /my/path  ext4  defaults,nofail  0  2
  # ------------------------------------------------------------------------------

  # mount with /etc/fstab manually
  [root]$ mount -a
#+END_SRC

*** lost+found
- http://unix.stackexchange.com/questions/18154/what-is-the-purpose-of-the-lostfound-folder-in-linux-and-unix

#+BEGIN_QUOTE
The thing is, the file had a name and location once, but that information is no longer available.
So ~fsck~ deposits the file in a specific directory, called ~lost+found~
#+END_QUOTE

#+BEGIN_QUOTE
Files that appear in ~lost+found~ are typically files that were already unlinked (i.e. their name had been erased)
but still opened by some process (so the data wasn't erased yet)when the system halted suddenly (kernel panic or power failure).
If that's all that happened, these files were slated for deletion anyway, you don't need to care about them.
#+END_QUOTE

#+BEGIN_QUOTE
On many filesystems, the ~lost+found~ directory is a bit special
because it preallocates a bit of space for ~fsck~ to deposit files there. (...)
If you accidentally delete ~lost+found~, *don't re-create it with* ~mkdir~, *use* ~mklost+found~ *if available*.
#+END_QUOTE

* Topics
** Inode Structure
- http://unix.stackexchange.com/questions/4402/what-is-a-superblock-inode-dentry-and-a-file

[[file:img/screenshot_2017-03-02_22-48-52.png]]

#+BEGIN_QUOTE
inodes starts at number 2 (root)

inode12(dir_1)’s count is 2, because it’s parent and self-reference(.) pointing it.
root(2) is only exception(expected 3 but 4), *because it’s pointed by superblock*;

The *superblock* is essentially file system metadata and defines the file system type, size, status, and
information about other metadata structures (metadata of metadata).
#+END_QUOTE

#+BEGIN_SRC shell
  $ ls -i
  624402 Applications   638157 Dropbox        606644 Pictures     19695291 nltk_data
  606600 Desktop        606588 Library      19316918 PredictionIO  2688212 repos
  606584 Documents      606640 Movies         606646 Public       24277126 screenshots
  606586 Downloads      606642 Music        24707402 bin          22461472 venvs
#+END_SRC

#+BEGIN_SRC shell
  $ touch test
  $ stat test
  File: 'test'
  Size: 0               Blocks: 0          IO Block: 4096   regular empty file
  Device: ca01h/51713d    Inode: 14999       Links: 1
  Access: (0664/-rw-rw-r--)  Uid: (  500/ec2-user)   Gid: (  500/ec2-user)
  Access: 2017-03-02 18:20:00.503961613 +0000
  Modify: 2017-03-02 18:20:00.503961613 +0000
  Change: 2017-03-02 18:20:00.503961613 +0000
  Birth: -
#+END_SRC
* Reference
** iostat
- https://forums.aws.amazon.com/thread.jspa?messageID=124044#124227
- https://unix.stackexchange.com/questions/104192/iostat-await-vs-svctm
- https://www.percona.com/blog/2014/06/25/why-util-number-from-iostat-is-meaningless-for-mysql-capacity-planning/

#+BEGIN_SRC shell
  iostat -xmdz 1
  #       ││││ └─ repeat every 1 second
  #       │││└─ omit output for any devices for which there was no activity during the sample period
  #       ││└─ display the device utilization report
  #       │└─ display statistics in megabytes per second
  #       └─ display extended statistics
#+END_SRC

#+BEGIN_EXAMPLE
  Device:  rrqm/s   wrqm/s     r/s     w/s    rMB/s    wMB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util
  xvdf       0.00  2934.00    0.00 2000.00     0.00    48.69    49.86     2.59    1.30    0.00    1.30   0.50  99.60
#+END_EXAMPLE

- ~rrqm/s~, ~wrqm/s~  :: read/write requests merged per second

- ~r/s~, ~w/s~, ~rMB/s~, ~wMB/s~ :: reads/writes (throughput) per second

- ~avgrq-sz~ :: Average request size in sectors (512 bytes)
  In general if this number is below 16 (16 * 512 bytes = 8KB).
  If this number is low (<50), you are going to be IOPS limited.
  If it's high (>100), you are likely to be bandwidth limited.

- ~avgqu-sz~ :: Average queue size.
  Indicates how many requests are queued waiting to be serviced.
  If ~avgqu-sz~ gets big (>30), your application is submitting more requests per secondthan the volume can handle.

- ~await~ :: Average wait in milliseconds.
  The average amount of time the requests that were completed during this period waited
  from when they entered the queue to when they were serviced. 
  This number is a combination of the queue length and the average service time.

- ~svctm~ :: Service time in milliseconds.
  While ~await~ counts the whole wait time of requests, ~svctm~ counts only the time consumed by device.
  As Linux doesn't measure the actual service time, so ~svctm~ is just approximation.
  Consider ~await~ more importantly.

- ~%util~ ::
  Percentage of CPU time during whchi I/O requests were issed to the device. 
  High ~%util~ doesn't always say that there is an overload.
  If the device serves requests in parallel, this value can constantly be high.

** top
#+BEGIN_SRC shell
  top
  top -u <user>
#+END_SRC

- ~l~ :: load avg
#+BEGIN_EXAMPLE
  top - 21:52:09 up 9 min,  2 users,  load average: 0.02, 0.08, 0.07
#+END_EXAMPLE
- ~t~ :: task/cpu stats
#+BEGIN_EXAMPLE
  Tasks: 175 total,   1 running, 174 sleeping,   0 stopped,   0 zombie
  %Cpu(s):  3.7 us,  0.3 sy,  0.0 ni, 96.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  %Cpu(s):   3.4/0.3     4[|||
#+END_EXAMPLE

- ~m~ :: Memory info
#+BEGIN_EXAMPLE
  KiB Mem :  4046268 total,  2908216 free,   606148 used,   531904 buff/cache
  KiB Swap:  4191228 total,  4191228 free,        0 used.  3190404 avail Mem
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  KiB Mem : 21.2/4046268  [||||||||||||||||||                                                                      ]
  KiB Swap:  0.0/4191228  [                                                                                        ]
#+END_EXAMPLE

- ~0~ :: Toggle zeros
#+BEGIN_EXAMPLE
   1857 yeongho+  20   0   97496   3940   2944 S  0.3  0.1   0:00.91 sshd
   2023 root      20   0       0      0      0 S  0.3  0.0   0:00.12 kworker/0:1
   2034 yeongho+  20   0   50264   4032   3308 R  0.3  0.1   0:00.26 top
#+END_EXAMPLE

#+BEGIN_EXAMPLE
    890 root      20   0  306860  71340  29248 S  0.3  1.8   0:04.25 Xorg
      1 root      20   0  119868   6080   4044 S       0.2   0:00.94 systemd
      2 root      20   0                       S                     kthreadd
#+END_EXAMPLE

-  ~1~, ~2~, ~3~ :: 

- ~E~ :: Change memory scale of summary
#+BEGIN_EXAMPLE
  MiB Mem : 3951.434 total, 2841.020 free,  592.242 used,  518.172 buff/cache
  MiB Swap: 4092.996 total, 4092.996 free,    0.000 used. 3115.512 avail Mem
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  GiB Mem :    3.859 total,    2.774 free,    0.579 used,    0.506 buff/cache
  GiB Swap:    3.997 total,    3.997 free,    0.000 used.    3.042 avail Mem
#+END_EXAMPLE

- ~e~ :: Change memory scale of tasks
#+BEGIN_EXAMPLE
  1490 yeongho+  20   0 1203.0m 162.8m  71.6m S  5.0  4.1   0:25.77 compiz
   890 root      20   0  299.7m  69.7m  28.6m S  0.3  1.8   0:02.42 Xorg
     1 root      20   0  117.1m   5.9m   3.9m S  0.0  0.1   0:00.94 systemd
     2 root      20   0    0.0m   0.0m   0.0m S  0.0  0.0   0:00.00 kthreadd
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  1490 yeongho+  20   0  1.175g 0.159g 0.070g S  6.7  4.1   0:26.55 compiz
   890 root      20   0  0.293g 0.068g 0.028g S  0.7  1.8   0:02.47 Xorg
     1 root      20   0  0.114g 0.006g 0.004g S  0.0  0.1   0:00.94 systemd
     2 root      20   0  0.000g 0.000g 0.000g S  0.0  0.0   0:00.00 kthreadd
#+END_EXAMPLE

- ~x~ :: Toggle highlight of sort field
[[file:img/screenshot_2017-08-19_22-21-02.png]]

[[file:img/screenshot_2017-08-19_22-21-22.png]]

- ~k~ :: Kill a task
#+BEGIN_EXAMPLE
  PID to signal/kill [default pid = 1632]
#+END_EXAMPLE

- ~r~ :: Renice a task
#+BEGIN_EXAMPLE
  PID to renice [default pid = 1632]
  Renice PID 1632 to value
#+END_EXAMPLE

- ~d~ or ~s~ :: Set update interval
#+BEGIN_EXAMPLE
  Change delay from 3.0 to
#+END_EXAMPLE


* Terminology
* Staging
