#+TITLE: AWS CloudFormation

* Table of Contents :TOC_2_gh:
- [[#overview][Overview]]
- [[#template][Template]]
  - [[#awstemplateformatversion][AWSTemplateFormatVersion]]
  - [[#parameters][Parameters]]
  - [[#mappings][Mappings]]
  - [[#conditions][Conditions]]
  - [[#transform][Transform]]
  - [[#resources][Resources]]
  - [[#outputs][Outputs]]
- [[#functions][Functions]]
  - [[#getatt][GetAtt]]
  - [[#sub][Sub]]
- [[#resource-types][Resource Types]]
  - [[#awsdynamodbtable][~AWS::DynamoDB::Table~]]

* Overview
- https://www.slideshare.net/AmazonWebServices/aws-cloudformation-best-practices

[[file:_img/screenshot_2018-03-23_18-45-46.png]]

* Template
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-reference.html

#+BEGIN_SRC yaml
  ---
  AWSTemplateFormatVersion: "version date"

  Description:
    String

  Metadata:
    template metadata

  Parameters:
    set of parameters

  Mappings:
    set of mappings

  Conditions:
    set of conditions

  Transform:
    set of transforms

  Resources:
    set of resources

  Outputs:
    set of outputs
#+END_SRC

** AWSTemplateFormatVersion
The latest template format version is ~2010-09-09~ and is currently the only valid value.

#+BEGIN_SRC yaml
  AWSTemplateFormatVersion: "2010-09-09"
#+END_SRC

** Parameters
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html

#+BEGIN_SRC yaml
  Parameters: 
    InstanceTypeParameter: 
      Type: String
      Default: t2.micro
      AllowedValues: 
        - t2.micro
        - m1.small
        - m1.large
      Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
#+END_SRC

Use the ~Ref~ intrinsic function to reference a parameter:
#+BEGIN_SRC yaml
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceTypeParameter
      ImageId: ami-2f726546
#+END_SRC

- Can have a maximum of 60 parameters
- Must be alphanumeric and unique among all logical names within the template.
- Parameters must be declared and referenced from within the same template.

*** Types
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html#parameters-section-structure-properties-type

- String
- Number
- List<Number>
- CommaDelimitedList
- [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html#aws-specific-parameter-types][AWS-Specific Parameter Types]]
- [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html#aws-ssm-parameter-types][SSM Parameter Types]]
** Mappings
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html

- The keys in mappings must be literal strings. The values can be String or List types.

#+BEGIN_SRC yaml
  Mappings: 
    Mapping01: 
      Key01: 
        Name: Value01
      Key02: 
        Name: Value02
      Key03: 
        Name: Value03
#+END_SRC

#+BEGIN_SRC yaml
  RegionMap: 
    us-east-1: 
      "32": "ami-6411e20d"
      "64": "ami-7a11e213"
    us-west-1: 
      "32": "ami-c9c7978c"
      "64": "ami-cfc7978a"
    eu-west-1: 
      "32": "ami-37c2f643"
      "64": "ami-31c2f645"
    ap-southeast-1: 
      "32": "ami-66f28c34"
      "64": "ami-60f28c32"
    ap-northeast-1: 
      "32": "ami-9c03a89d"
      "64": "ami-a003a8a1"
  Resources: 
    myEC2Instance: 
      Type: "AWS::EC2::Instance"
      Properties: 
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", 32]
        InstanceType: m1.small
#+END_SRC
** Conditions
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html

#+BEGIN_QUOTE
You might use conditions when you want to reuse a template that can create resources in different contexts,
such as a test environment versus a production environment. 
#+END_QUOTE

#+BEGIN_SRC yaml
  Conditions: 
    CreateProdResources: !Equals [ !Ref EnvType, prod ]
  Resources: 
    EC2Instance: 
      Type: "AWS::EC2::Instance"
      Properties: 
        ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
    MountPoint: 
      Type: "AWS::EC2::VolumeAttachment"
      Condition: CreateProdResources
      Properties: 
        InstanceId: 
          !Ref EC2Instance
        VolumeId: 
          !Ref NewVolume
        Device: /dev/sdh
    NewVolume: 
      Type: "AWS::EC2::Volume"
      Condition: CreateProdResources
      Properties: 
        Size: 100
        AvailabilityZone: 
          !GetAtt EC2Instance.AvailabilityZone
  Outputs: 
    VolumeId: 
      Condition: CreateProdResources
      Value: 
        !Ref NewVolume
#+END_SRC

** Transform
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
- [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html][AWS:Serverless]]
- [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html][AWS::Include]] 

A kind of macro feature. For instance, ~AWS:Include~ includes templete definitions fromother files:
#+BEGIN_SRC yaml
  Resources:
    MyBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
          'Fn::Transform':
              - Name: 'AWS::Include'
                Parameters:
                  Location: s3://bucket/myBucketName.yaml
              - Name: 'AWS::Include'
                Parameters:
                  Location: s3://bucket/myBucketAcl.yaml
#+END_SRC

** Resources
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html

#+BEGIN_SRC yaml
  Resources:
    Logical ID:
      Type: Resource type
      Properties:
        Set of properties
#+END_SRC

- Logical ID ::
  The logical ID must be alphanumeric (~A-Za-z0-9~) and unique within the template.

** Outputs
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html

#+BEGIN_SRC yaml
  Outputs:
    Logical ID:
      Description: Information about the value
      Value: Value to return
      Export:
        Name: Value to export
#+END_SRC
* Functions
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html

** GetAtt
#+BEGIN_SRC yaml
  !GetAtt logicalNameOfResource.attributeName
#+END_SRC
** Sub
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html

#+BEGIN_SRC yaml
  Name: !Sub
    - www.${Domain}
    - { Domain: !Ref RootDomainName }
#+END_SRC

* Resource Types
- [[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html][Resource Types]]

** ~AWS::DynamoDB::Table~
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html

#+BEGIN_SRC yaml
  Type: "AWS::DynamoDB::Table"
  Properties:
    AttributeDefinitions:
      - AttributeDefinition
    GlobalSecondaryIndexes:
      - GlobalSecondaryIndexes
    KeySchema:
      - KeySchema
    LocalSecondaryIndexes:
      - LocalSecondaryIndexes
    ProvisionedThroughput:
      ProvisionedThroughput
    SSESpecification:
      SSESpecification
    StreamSpecification:
      StreamSpecification
    TableName: String
    Tags: 
      - Resource Tag
    TimeToLiveSpecification: 
      TimeToLiveSpecification
#+END_SRC

*** AttributeDefinition
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-attributedef.html

The ~AttributeDefinition~ property type represents an attribute *for describing the key schema* for a DynamoDB table and indexes.
*They don't represent the full schema of the table.*

*** KeySchema
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-keyschema.html

#+BEGIN_SRC yaml
  KeySchema: 
    - AttributeName: Sales
      KeyType: HASH
#+END_SRC

#+BEGIN_SRC yaml
  KeySchema: 
    - AttributeName: Sales
      KeyType: HASH
    - AttributeName: Artist
      KeyType: RANGE
#+END_SRC
