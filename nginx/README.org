#+TITLE: nginx

* Table of Contents :TOC_1_gh:
 - [[#beginners-guide][Beginner's Guide]]
 - [[#references][References]]
 - [[#use-cases][Use Cases]]

* Beginner's Guide
- http://nginx.org/en/docs/beginners_guide.html

#+BEGIN_SRC shell
  $ nginx -s stop   # fast shutdown
  $ nginx -s quit   # graceful shutdown
  $ nginx -s reload # reloading the configuration file
  $ nginx -s reopen # reopening the log files
#+END_SRC

** Directives
- simple: ~name~ and ~parameters~, separated by ~spaces~, ends with ~;~
- block: Instead of the semicolon, it ends with a block surrounded by ~{}~
- A block surrounding directives is called a ~context~
- Top level context is called the ~main context~

* References
** http
- http://nginx.org/en/docs/http/ngx_http_core_module.html

*** location
- http://nginx.org/en/docs/http/ngx_http_core_module.html#location

1. If there exists exact match(~=~) its configuration used
2. Pick the longest prefix match
3. Regex checked, in order of appearance
   1. first regex match configuration used
   2. no regex match, the longest prefix match used.

#+BEGIN_EXAMPLE
  location = / {
      [ configuration A ]
  }

  location / {
      [ configuration B ]
  }

  location /documents/ {
      [ configuration C ]
  }

  # '^~' modifier skips regex check
  location ^~ /images/ {
      [ configuration D ]
  }

  # '~*' modifier for regex case insensitive match
  # '~' for case sensitive
  location ~* \.(gif|jpg|jpeg)$ {
      [ configuration E ]
  }
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  /                        -> A
  /index.html              -> B
  /documents/document.html -> C
  /images/1.gif            -> D
  /documents/1.jpg         -> E
#+END_EXAMPLE
*** types
- http://nginx.org/en/docs/http/ngx_http_core_module.html#types
- Maps file name extensions to MIME types of responses

#+BEGIN_EXAMPLE
  types {
      text/html  html;
      image/gif  gif;
      image/jpeg jpg;
  }
#+END_EXAMPLE

** Core functionality
- http://nginx.org/en/docs/ngx_core_module.html

*** events
- http://nginx.org/en/docs/ngx_core_module.html#events
- Where directives relating connection processing are placed

#+BEGIN_EXAMPLE
#+BEGIN_EXAMPLE
  events {
      use kqueue;
      worker_connections 2048;
  }
#+END_EXAMPLE

*** include
- http://nginx.org/en/docs/ngx_core_module.html#include
- Directives in files are inlcuded in the current context

#+BEGIN_EXAMPLE
  include mime.types;
  include vhosts/*.conf;
#+END_EXAMPLE
*** worker_processes
- http://nginx.org/en/docs/ngx_core_module.html#worker_processes
- Setting it to the number of available CPU cores would be a good start
- The value ~auto~ will try to autodetect it

#+BEGIN_EXAMPLE
  worker_processes auto;
#+END_EXAMPLE


* Use Cases
** Preserve Request URL
- http://stackoverflow.com/questions/5834025/how-to-preserve-request-url-with-nginx-proxy-pass

#+BEGIN_EXAMPLE
  location / {
      proxy_pass http://my_app_upstream;
      proxy_set_header Host $host;
      # ...
  }
#+END_EXAMPLE

