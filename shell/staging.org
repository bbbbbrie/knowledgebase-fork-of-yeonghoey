** TODO <2017-06-29 Thu> shift
- http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_09_07.html

** TODO <2017-02-09 Thu> How do I copy multiple files by wildcard?
http://unix.stackexchange.com/questions/122605/how-do-i-copy-multiple-files-by-wildcard

** TODO <2017-02-01 Wed> cron.d
- http://askubuntu.com/questions/56683/where-is-the-cron-crontab-log

** TODO <2017-03-01 Wed> Detect ostype
- http://stackoverflow.com/questions/394230/detect-the-os-from-a-bash-script

** TODO <2017-03-30 Thu> trap
http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_12_02.html
This instructs the trap command to catch the listed SIGNALS, which may be signal names with or without the SIG prefix, or signal numbers. If a signal is 0 or EXIT, the COMMANDS are executed when the shell exits. If one of the signals is DEBUG, the list of COMMANDS is executed after every simple command. A signal may also be specified as ERR;
- trap 'rm "$TERRAFORM_PLAN"' EXIT

** TODO <2017-07-02 Sun> Bash curly braces in variables
- https://stackoverflow.com/questions/8748831/when-do-we-need-curly-braces-in-variables-using-bash
- https://google.github.io/styleguide/shell.xml#Variable_expansion

** TODO <2017-07-03 Mon> here-document to variables
- https://stackoverflow.com/questions/1167746/how-to-assign-a-heredoc-value-to-a-variable-in-bash
- https://unix.stackexchange.com/questions/265149/why-is-set-o-errexit-breaking-this-read-heredoc-expression/265151#265151
- https://unix.stackexchange.com/questions/68419/how-to-print-in-here-document

** TODO <2017-07-03 Mon> IFS?
** TODO <2017-07-03 Mon> wc -l
- https://stackoverflow.com/questions/6314679/in-bash-how-do-i-count-the-number-of-lines-in-a-variable

** TODO <2017-07-03 Mon> source in function
- https://unix.stackexchange.com/questions/151889/why-does-bashs-source-command-behave-differently-when-called-from-a-function
** eval vs source
- https://unix.stackexchange.com/questions/123063/what-is-the-difference-between-eval-and-source-dev-stdin

** addpath
- https://unix.stackexchange.com/questions/217622/add-path-to-path-if-not-already-in-path
#+BEGIN_SRC shell
  addpath() {
    if [[ ":${PATH}:" != *":$1:"* ]]; then
      PATH="$1:${PATH}"
    fi
  }

#+END_SRC
** if content exists multiline string
- https://stackoverflow.com/questions/21128592/bash-text-search-find-if-the-content-of-one-file-exists-in-another-file

** echo "${string1#"$string2"}"
- https://stackoverflow.com/questions/25725391/bash-path-difference-between-two-paths

** bash grouping commands
- https://www.gnu.org/software/bash/manual/html_node/Command-Grouping.html

** capturing multiline output
- https://stackoverflow.com/questions/613572/capturing-multiple-line-output-into-a-bash-variable

** bash source return
- https://stackoverflow.com/questions/9640660/any-way-to-exit-bash-script-but-not-quitting-the-terminal

** sudo keep alive
- https://gist.github.com/cowboy/3118588

** GNU locale categories
- https://www.gnu.org/savannah-checkouts/gnu/libc/manual/html_node/Locale-Categories.html
- https://stackoverflow.com/questions/30479607/explain-the-effects-of-export-lang-lc-ctype-lc-all

** set -e not exit in function
- https://stackoverflow.com/questions/25794905/why-does-set-e-true-false-true-not-exit
- https://stackoverflow.com/questions/19789102/why-is-bash-errexit-not-behaving-as-expected-in-function-calls

** bash check variable exists
- https://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash

** shell initialization
- https://github.com/rbenv/rbenv/wiki/Unix-shell-initialization

** check if a program exists
- https://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script

** check if two paths are equal in Bash
- https://stackoverflow.com/questions/33980224/how-to-check-if-two-paths-are-equal-in-bash

** Delete all broken symbolic links with a line
- https://stackoverflow.com/questions/22097130/delete-all-broken-symbolic-links-with-a-line

** determine current shell
- https://stackoverflow.com/questions/3327013/how-to-determine-the-current-shell-im-working-on

** hash -r
#+BEGIN_SRC shell
  # ----------------------------------------------------------------------------
  # For bash and zhs,  hash command must be called to forget past commands.
  # Without forgetting past commands, $PATH changes may not take effect.
  if [[ "${BASH-}" || "${ZSH_VERSION-}" ]]; then
    hash -r 2>/dev/null
    #     └─ forget all previously remembered utility locations
  fi
  # ----------------------------------------------------------------------------
#+END_SRC

** negative offset of shell parameter expansion
#+BEGIN_SRC shell

  if [[ "${file: -3}" == ".tf" ]]; then
    #           └─  a negative offset must be separated from the colon by
    #               at least one space to avoid being confused with :- expansion
#+END_SRC
** TODO <2017-11-13 Mon> :, > in shell
#+BEGIN_EXAMPLE
     : > filename
        # The > truncates file "filename" to zero length.
        # If file not present, creates zero-length file (same effect as 'touch').
        # The : serves as a dummy placeholder, producing no output.
#+END_EXAMPLE
** TODO <2017-11-13 Mon> >&2 at head
- https://stackoverflow.com/questions/27918149/difference-between-position-of-redirection-in-echo2-message-echo-message

** TODO <2017-11-06 Mon> set environment variable permenantly
- https://unix.stackexchange.com/questions/117467/how-to-permanently-set-environmental-variables

** Linux Run Command As Another User
- https://superuser.com/questions/1062576/difference-between-su-c-and-runuser-l-c
- https://www.cyberciti.biz/open-source/command-line-hacks/linux-run-command-as-different-user/

** List of all available man pages
- https://superuser.com/questions/207450/list-of-all-available-man-pages

** TODO <2017-10-10 Tue> bash file.sh
- https://stackoverflow.com/questions/2177932/how-do-i-execute-a-bash-script-in-terminal

** TODO <2017-11-09 Thu> y/n, Y/n, y/N
- https://askubuntu.com/questions/322600/do-you-want-to-continuey-n-why-the-upper-case/322601
