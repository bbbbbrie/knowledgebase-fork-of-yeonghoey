#+TITLE: Debian

* Table of Contents :TOC_3_gh:
- [[#overview][Overview]]
- [[#reference][Reference]]
  - [[#dch-debchange][dch (debchange)]]
  - [[#deb-files][.deb files]]
  - [[#dpkg][dpkg]]
  - [[#postinst][postinst]]
- [[#terminology][Terminology]]
- [[#topics][Topics]]
- [[#how-to][How-to]]
  - [[#create-a-debian-pacakge][Create a debian pacakge]]
    - [[#source-package][Source package]]
    - [[#files-in-debian][Files in debian/]]
    - [[#debianchangelog][debian/changelog]]
    - [[#debiancontrol][debian/control]]
    - [[#debinrules][debin/rules]]
    - [[#debiancompat][debian/compat]]
    - [[#debhelper][debhelper]]
    - [[#dh][dh]]
    - [[#patch-systems][Patch systems]]
    - [[#doing-things-during-installation-and-removal][Doing things during installation and removal]]
    - [[#packaging-with-a-vcs][Packaging with a VCS]]
- [[#links][Links]]
- [[#staging][Staging]]

* Overview
[[file:img/screenshot_2017-09-04_22-35-21.png]]

* Reference
** dch (debchange)
- https://stackoverflow.com/questions/18957811/debian-packages-on-xubuntu-install-debchange-dch
- https://askubuntu.com/questions/579323/dch-non-interactive-mode

#+BEGIN_SRC shell
  sudo apt-get install devscripts
#+END_SRC

#+BEGIN_SRC shell
  # Create initial `debian/changelog`, content would look like following:
  # -------------------------------------------------------------------------------
  # my-package (2.11.2-b145b232a) unstable; urgency=low
  #
  #   * Built automatically
  #
  #  -- Yeongho Kim <yeonghoey@yhws>  Wed, 18 Oct 2017 17:09:58 +0900
  # -------------------------------------------------------------------------------
  debchange \
    --create \
    --package      "my-package" \
    --newversion   "${VERSION}" \
    --distribution "unstable" \
    --urgency      "low" \
    "Built automatically"

#+END_SRC

** .deb files
- https://www.debian.org/doc/manuals/packaging-tutorial/packaging-tutorial.en.pdf
- an [[https://en.wikipedia.org/wiki/Ar_(Unix)][ar]] archive, contains:
  - ~debian-binary~  :: version of the deb file format, ~"2.0\n"~
  - ~control.tar.gz~ :: metadata about the package
  - ~data.tar.gz~    :: data files of the package

** dpkg
- ~-i~, ~--install~ ~<package-file...>~ ::
  1. Extract the control files of the new package.
  2. If another version of the same package was installed before the new installation, execute ~prerm~ script of the old package.
  3. Run ~preinst~ script, if provided by the package.
  4. Unpack the new files, and at the same time back up the old files, so that if something goes wrong, they can be restored.
  5. If another version of the same package was installed before the new installation, execute the ~postrm~ script of the old package.
     Note that this script is executed after the ~preinst~ script of the new package, because new files are written at the same time old files are removed.
  6. Configure the package. See ~--configure~ for detailed information about how this is done.

** postinst
- https://askubuntu.com/questions/101962/script-to-only-execute-during-first-install-of-a-package

* Terminology

* Topics
* How-to
** Create a debian pacakge
- https://www.debian.org/doc/manuals/packaging-tutorial/packaging-tutorial.en.pdf

[[file:img/screenshot_2017-10-10_16-27-53.png]]

*** Source package
- One source package can generate several binary packages
- Two kinds of packages
  - Native Packages     :: normally for Debian specific software (~dpkg~, ~apt~)
  - Non-native packages :: software developed outside Debian (*Mostly this is relevant*)
- Main file: ~.dsc~ (meta-data)
- Other files depending on the version of the source format(Here shows only ~3.0 (quilt)~
  - ~pkg_ver.orig.tar.gz~      :: Upstream source
  - ~pkg_debver.debian.tar.gz~ :: tarball with the Debian changes

*** Files in debian/
- Main files
  - ~control~   :: meta-data about the package (dependencies, etc.)
  - ~rules~     :: specifies how to build the package
  - ~copyright~ :: copyright information for the package
  - ~changelog~ :: history of the Debian package

*** debian/changelog
- https://www.debian.org/doc/debian-policy/#debian-changelog-debian-changelog

- Lists the Debian pacakging changes
- Gives the current version of the package
- [[file:img/screenshot_2017-10-10_16-39-43.png]]
- Edited manually or with ~dch~, for new release: ~dch -i~

#+BEGIN_EXAMPLE
  mpich2 (1.2.1.1-5) unstable; urgency = low
    ,* Descriptions
   -- Lucas Nussbaum <lucas@debian.org>	Wed, 15 Sep 2010 18:13:44 +0200
#+END_EXAMPLE

*** debian/control
- https://www.debian.org/doc/debian-policy/#source-package-control-files-debian-control

- Package metadata like ::
  Package name, section, priority, maintainer, uploaders,
  build-dependencies, dependencies, description, homepage

#+BEGIN_EXAMPLE
  Source : wget
  Section : web
  Priority : important
  Maintainer : Noel Kothe < noel@debian.org >
  Build - Depends : debhelper (>> 5.0.0) , gettext , texinfo ,
  libssl - dev ( >= 0.9.8) , dpatch , info2man
  Standards - Version : 3.8.4
  Homepage : http://www.gnu.org/software/wget/
  Package : wget
  Architecture : any
  Depends : ${ shlibs : Depends }, ${ misc : Depends }
  Description : retrieves files from the web
  Wget is a network utility to retrieve files from the Web
#+END_EXAMPLE

*** debin/rules
- https://www.debian.org/doc/debian-policy/#main-building-script-debian-rules
- Makefile

*** debian/compat
- Use ~9~

*** debhelper
- Factor the common tasks in standard tools used by all packages
- Fix some packaging bugs once for all packages
- Called from ~debian/rules~

*** dh
- Simple ~debian/rules~, listing only overrides

#+BEGIN_EXAMPLE
  #!/ usr / bin / make -f
  %:
  	dh $@
  override_dh_auto_configure :
  	dh_auto_configure -- -- with - kitchen - sink
  override_dh_auto_build :
  	make world
#+END_EXAMPLE

[[file:img/screenshot_2017-10-10_16-55-53.png]]

*** Patch systems 
- http://pkg-perl.alioth.debian.org/howto/quilt.html
- Recommended built-in patch system: ~3.0 (quilt)~

*** Doing things during installation and removal
- https://www.debian.org/doc/debian-policy/#maintainer-scripts
- Create/remove system users, start/stop services, manage alternatives
- Done in maintainer scripts, ~preinst~, ~postinst~, ~prerm~, ~postrm~

*** Packaging with a VCS
- http://honk.sigxcpu.org/projects/git-buildpackage/manual-html/gbp.html
- Use ~git-buildpackage~

* Links
- https://www.debian.org/doc/manuals/maint-guide/
- https://www.debian.org/doc/devel-manuals
- 

* Staging
