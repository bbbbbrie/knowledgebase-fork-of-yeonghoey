#+TITLE: SQLAlachemy

* Table of Contents :TOC_2_gh:
 - [[#references][References]]
   - [[#column][Column]]
   - [[#declarative-api][Declarative API]]
 - [[#tutorials][Tutorials]]
   - [[#introduction-to-sqlalchemy][Introduction to SQLAlchemy]]

* References
** Column
- http://docs.sqlalchemy.org/en/latest/core/metadata.html#sqlalchemy.schema.Column
- http://docs.sqlalchemy.org/en/latest/core/type_basics.html

#+BEGIN_SRC python
  # use a type with arguments
  Column('data', String(50))
  # use no arguments
  Column('level', Integer)

  # turn on autoincrement for this column despite
  # the ForeignKey()
  Column('id', ForeignKey('other.id'),
              primary_key=True, autoincrement='ignore_fk')
#+END_SRC

- [[http://docs.sqlalchemy.org/en/latest/orm/mapping_columns.html#sqlalchemy.orm.column_property][column_property]] can be used for column level options:
#+BEGIN_SRC python
  class User(Base):
      __tablename__ = 'user'
      id = Column(Integer, primary_key=True)
      firstname = Column(String(50))
      lastname = Column(String(50))
      fullname = column_property(firstname + " " + lastname)
#+END_SRC

** Declarative API
- http://docs.sqlalchemy.org/en/latest/orm/extensions/declarative/index.html
- http://docs.sqlalchemy.org/en/latest/orm/extensions/declarative/api.html
- http://docs.sqlalchemy.org/en/latest/orm/extensions/declarative/basic_use.html

#+BEGIN_SRC python
  from sqlalchemy import Column, Integer, String
  from sqlalchemy.ext.declarative import declarative_base

  Base = declarative_base()

  class SomeClass(Base):
      __tablename__ = 'some_table'
      id = Column(Integer, primary_key=True)
      name =  Column(String(50))
#+END_SRC

* Tutorials
** Introduction to SQLAlchemy
- https://youtu.be/woKYyhLCcnU

[[file:img/screenshot_2017-05-12_14-35-30.png]]

[[file:img/screenshot_2017-05-12_14-36-07.png]]

[[file:img/screenshot_2017-05-12_14-37-26.png]]

[[file:img/screenshot_2017-05-12_14-37-53.png]]

[[file:img/screenshot_2017-05-12_14-38-50.png]]

[[file:img/screenshot_2017-05-12_14-39-39.png]]

[[file:img/screenshot_2017-05-12_14-50-43.png]]

[[file:img/screenshot_2017-05-12_14-52-36.png]]

[[file:img/screenshot_2017-05-12_14-53-41.png]]

[[file:img/screenshot_2017-05-12_14-54-31.png]]

[[file:img/screenshot_2017-05-12_14-55-04.png]]

[[file:img/screenshot_2017-05-12_14-56-58.png]]

[[file:img/screenshot_2017-05-12_14-57-32.png]]

[[file:img/screenshot_2017-05-12_14-58-44.png]]

[[file:img/screenshot_2017-05-12_15-00-03.png]]


[[file:img/screenshot_2017-05-12_15-01-48.png]]

~:something~ is converted into python format string(like ~%(something)s~, complying with the backend engine:

[[file:img/screenshot_2017-05-12_15-01-25.png]]

[[file:img/screenshot_2017-05-12_15-05-48.png]]

[[file:img/screenshot_2017-05-12_15-05-59.png]]

[[file:img/screenshot_2017-05-12_15-06-16.png]]

[[file:img/screenshot_2017-05-12_15-07-02.png]]

[[file:img/screenshot_2017-05-12_15-07-35.png]]

[[file:img/screenshot_2017-05-12_15-08-08.png]]

[[file:img/screenshot_2017-05-12_15-08-33.png]]

[[file:img/screenshot_2017-05-12_15-09-54.png]]

[[file:img/screenshot_2017-05-12_15-11-21.png]]
