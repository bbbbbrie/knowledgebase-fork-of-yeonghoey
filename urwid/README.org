#+TITLE: Urwid

* Table of Contents :TOC_3_gh:
- [[#overview][Overview]]
- [[#reference][Reference]]
  - [[#progressbar][ProgressBar]]
- [[#terminology][Terminology]]
- [[#topics][Topics]]
  - [[#display-attributes][Display Attributes]]
  - [[#widgets][Widgets]]
- [[#how-to][How-to]]
  - [[#handle-signals][Handle signals]]
- [[#links][Links]]
- [[#staging][Staging]]

* Overview
* Reference
** ProgressBar
- http://urwid.org/reference/widget.html#progressbar

#+BEGIN_SRC python
  PALETTE = [
      ('normal', 'black', 'light gray'),
      ('complete', 'black', 'dark red'),
  ]

  p = urwid.ProgressBar('normal', 'complete')

  # Put the following line somewhere else
  p.current += 1
#+END_SRC

[[file:img/screenshot_2018-01-07_17-30-58.png]]

* Terminology
* Topics
** Display Attributes
- http://urwid.org/manual/displayattributes.html
- http://urwid.org/reference/display_modules.html#urwid.BaseScreen.register_palette

- When a display attribute is ~None~, it's considered as ~default~
- ~palette~ is a list of ~(name, like_other_name)~ or ~(name, foreground, background, mono, foreground_high, background_high)~
- ~mono~ and ~foreground/background_high~ values are optional

#+BEGIN_SRC python
  palette = [
      ('banner', 'black', 'light gray'),
      ('streak', 'black', 'dark red'),
      ('bg', 'black', 'dark blue'),
  ]

  urwid.MainLoop(fill, palette)
#+END_SRC

- ~AttrMap~
[[file:img/screenshot_2018-01-07_17-18-12.png]]

#+BEGIN_SRC python
  # While u"hello" text will appear with display attribute 'attr1',
  # all surrounding whitespace will appear with display attribute 'attr2'.
  # (gray area is 'attr1', red area is 'attr2')
  AttrMap(Text(('attr1', u"Hello World")), 'attr2')
#+END_SRC

** Widgets
- http://urwid.org/manual/widgets.html

[[file:img/screenshot_2018-01-07_16-43-14.png]]

- The topmost widget is always a box widget.

[[file:img/screenshot_2018-01-07_16-43-50.png]]

[[file:img/screenshot_2018-01-07_16-44-25.png]]

- ~Pile~ and ~ListBox~ are both for stacking widgets vertically.
- Only ~ListBox~ can scroll widgets.


* How-to
** Handle signals
- http://urwid.org/tutorial/index.html#signal-handlers

[[file:img/screenshot_2018-01-07_16-36-19.png]]

#+BEGIN_SRC python
  import urwid

  palette = [('I say', 'default,bold', 'default', 'bold'),]
  ask = urwid.Edit(('I say', u"What is your name?\n"))
  reply = urwid.Text(u"")
  button = urwid.Button(u'Exit')
  div = urwid.Divider()
  pile = urwid.Pile([ask, div, reply, div, button])
  top = urwid.Filler(pile, valign='top')

  def on_ask_change(edit, new_edit_text):
      reply.set_text(('I say', u"Nice to meet you, %s" % new_edit_text))

  def on_exit_clicked(button):
      raise urwid.ExitMainLoop()

  urwid.connect_signal(ask, 'change', on_ask_change)
  urwid.connect_signal(button, 'click', on_exit_clicked)

  urwid.MainLoop(top, palette).run()
#+END_SRC

* Links
* Staging
