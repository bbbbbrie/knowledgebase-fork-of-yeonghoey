#+TITLE: systemd

* Table of Contents :TOC_5_gh:
- [[#overview][Overview]]
- [[#reference][Reference]]
- [[#units][Units]]
  - [[#syntax][Syntax]]
  - [[#types][Types]]
    - [[#target][Target]]
  - [[#paths][Paths]]
- [[#special-units][Special units]]
- [[#sections][Sections]]
  - [[#unit][Unit]]
    - [[#description][Description]]
    - [[#documentation][Documentation]]
    - [[#requires][Requires]]
    - [[#wants][Wants]]
    - [[#requisite][Requisite]]
    - [[#conflicts][Conflicts]]
    - [[#before][Before]]
    - [[#after][After]]
    - [[#condition][Condition...]]
    - [[#assert][Assert...]]
  - [[#service][Service]]
    - [[#type][Type]]
    - [[#remainafterexit][RemainAfterExit]]
    - [[#pidfile][PIDFile]]
    - [[#busname][BusName]]
    - [[#notifyaccess][NotifyAccess]]
    - [[#execstart][ExecStart]]
    - [[#execstartpre][ExecStartPre]]
    - [[#execstartpost][ExecStartPost]]
    - [[#execreload][ExecReload~]]
    - [[#execstop][ExecStop=]]
    - [[#execstoppost][ExecStopPost]]
    - [[#restartsec][RestartSec]]
    - [[#restart][Restart]]
    - [[#timeoutsec][TimeoutSec]]
  - [[#install][Install]]
    - [[#wantedby][WantedBy]]
    - [[#requiredby][RequiredBy]]
    - [[#alias][Alias]]
    - [[#also][Also]]
    - [[#defaultinstance][DefaultInstance]]
- [[#commands][Commands]]
  - [[#systemctl][systemctl]]
  - [[#journalctl][journalctl]]
- [[#topics][Topics]]
  - [[#is-it-expected-for-systemd-to-start-disabled-services][Is it expected for systemd to start disabled services?]]
- [[#how-to][How-to]]
- [[#links][Links]]
- [[#staging][Staging]]

* Overview
- https://en.wikipedia.org/wiki/Systemd
- https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files

[[file:img/screenshot_2017-11-09_15-47-44.png]]


* Reference
- https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files
- https://www.digitalocean.com/community/tutorials/systemd-essentials-working-with-services-units-and-the-journal

* Units
** Syntax
- case-sensitive
- ~X-<name>~ for non-standard sections
- ~1~, ~yes~, ~on~, ~true~, ~0~, ~no~, ~off~, ~false~ for booleans

#+BEGIN_EXAMPLE
  [Section]
  Directive1=value
  Directive2=value
  ...
#+END_EXAMPLE

** Types
| type of unit | description                                                               |
|--------------+---------------------------------------------------------------------------|
| ~.service~   | manage a service or application on the server                             |
| ~.socket~    |                                                                           |
| ~.device~    |                                                                           |
| ~.mount~     |                                                                           |
| ~.automount~ |                                                                           |
| ~.swap~      |                                                                           |
| ~.target~    | synchronization points for other units when booting up or changing states |
| ~.path~      |                                                                           |
| ~.timer~     |                                                                           |
| ~.snapshot~  |                                                                           |
| ~.slice~     |                                                                           |
| ~.scope~     |                                                                           |

*** Target
- Target units do not offer any additional functionality on top of the generic functionality provided by units.
- They exist merely to group units via dependencies

** Paths
| path                  | description                                  |
|-----------------------+----------------------------------------------|
| ~/lib/systemd/system~ | unit files                                   |
| ~/run/systemd/system~ | runt-ime unit definitions                    |
| ~/etc/systemd/system~ | overrides (unit files which take precedence) |

* Special units
- https://www.freedesktop.org/software/systemd/man/systemd.special.html

| Target           | description                                                                               |
|------------------+-------------------------------------------------------------------------------------------|
| ~default.target~ | Usually, this should be aliased (symlinked) to ~multi-user.target~ or ~graphical.target~. |

* Sections
- https://www.freedesktop.org/software/systemd/man/systemd.directives.html

** Unit
- The first section found in most unit files
- Defines metadata for the unit and configuring the relationship of the unit to other units.

*** Description
*** Documentation
*** Requires
- activate dependenceis and fail if they fail
*** Wants
- activate dependencies but don't care whether they fail or not
*** Requisite
- fails if the dependency is not active
*** Conflicts
- deactivate the dependency if it is active
*** Before
*** After
*** Condition...
*** Assert...

** Service
- https://www.freedesktop.org/software/systemd/man/systemd.service.html#Options
- https://www.freedesktop.org/software/systemd/man/systemd.service.html#Command%20lines

- Defines configuration that is only applicable for services

*** Type
- how to manage services. ~simple~ is default, ~forking~ for services which fork, ~oneshot~ for shot-lived process
*** RemainAfterExit
- with ~oneshot~ type. active after process exits                                                                  
*** PIDFile
- with ~forking~ type                                                                                              |
*** BusName
- with ~dbus~ type                                                                                                 |
*** NotifyAccess
- with ~notify~ type                                                                                               |

*** ExecStart
- if path to command starts with ~-~, systemd considers active even if it's failed
*** ExecStartPre
*** ExecStartPost
*** ExecReload~
*** ExecStop=
- if not given, the process will be killed when stopped

*** ExecStopPost
*** RestartSec
*** Restart
- ~always~, ~on-success~, ~on-failure~, ~on-abnormal~, ~on-abort~, ~on-watchdog~

[[file:img/screenshot_2017-11-09_16-14-09.png]]

*** TimeoutSec
- When stopping, after waiting ~n~ seconds, systemd kills the process

** Install
- The last section is often
- optional
- Defines the behavior or a unit if it is /enabled/ or /disabled/
- *Enabling a unit marks it to be automatically started at boot.*

*** WantedBy
For ~sshd.service~,
#+BEGIN_EXAMPLE
  [Unit]
  ...
  [Service]
  ...
  [Install]
  WantedBy=multi-user.target
#+END_EXAMPLE

When enabling ~sshd.service~, systemd adds it to ~multi-user.target~ by following:
#+BEGIN_SRC shell
  ln -s '/usr/lib/systemd/system/sshd.service' '/etc/systemd/system/multi-user.target/wants/sshd.service'
#+END_SRC

*** RequiredBy
*** Alias
*** Also
*** DefaultInstance

* Commands
** systemctl
#+BEGIN_SRC shell
  systemctl start <name>.service
  systemctl stop <name>.service
  systemctl restart <name>.service
  systemctl reload <name>.service      # reload some configs while running
  systemctl enable <name>.service      # make service start at boot
  systemctl disable <name>.service

  systemctl status <name>.service      # overview
  systemctl show <name>.service        # low-level details
  systemctl list-dependencies <name>.service

  systemctl list-units                 # only active
  systemctl list-units --all           # all loaded
  systemctl list-unit-files            # all installed

  systemctl cat <name>.service         # contents of unit file
  systemctl edit <name>.service        # edit override for unit file
  systemctl edit --full <name>.service # edit unit file

  systemctl daemon-reload              # reload after edit

  systemctl list-unit-files --type=target
  systemctl get-default
#+END_SRC

** journalctl
#+BEGIN_SRC shell
  journalctl                   # all
  journalctl -b                # current boot
  journalctl -k                # only kernel messages
  journalctl -u <name>.service # unit
#+END_SRC

* Topics
** Is it expected for systemd to start disabled services?
- https://stackoverflow.com/questions/39086459/is-it-expected-for-systemd-to-start-disabled-services

#+BEGIN_QUOTE
The ~systemctl enable~ and ~systemctl disable~ operations *configure auto-starting* of a unit.
#+END_QUOTE

So, starting a unit without enabling it is valid.

* How-to
* Links
* Staging
